{"ast":null,"code":"var _jsxFileName = \"/Users/elinasmirnova/Desktop/new_react_app/my-app/src/pages/Search/Search.js\";\nimport React, { Component } from \"react\";\nimport Navbar from \"../../components/NavbarSearch/Navbar\";\nimport { getRestaurants } from \"../../api/zomato\";\nimport \"./index.css\";\nimport RestaurantCard from \"../../components/RestaurantCard/RestaurantCard\";\nconst PREFIX = \"search\";\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cuisine: \"\",\n      operation: \"Search\",\n      offset: 0,\n      position: undefined,\n      restaurants: [],\n      sortBy: \"rating\",\n      order: \"desc\",\n      favourites: [],\n      isLoading: false\n    };\n\n    this.onChange = event => {\n      this.setState({\n        cuisine: event.target.value\n      });\n    };\n\n    this.search = event => {\n      this.setState({\n        operation: \"Fetching location..\",\n        isLoading: true\n      });\n      navigator.geolocation.getCurrentPosition(async position => {\n        this.setState({\n          operation: \"Fetching restaurants...\",\n          position: position\n        });\n        const data = await getRestaurants(position, this.state.cuisine, this.state.offset);\n        this.setState({\n          restaurants: data,\n          operation: \"Search\",\n          isLoading: false\n        });\n      });\n    };\n\n    this.handleShowMore = async () => {\n      this.setState({\n        offset: this.state.offset += 10\n      });\n      console.log(this.state.offset);\n      const newRestaurants = await getRestaurants(this.state.position, this.state.cuisine, this.state.offset, this.state.sortBy, this.state.order);\n      this.setState({\n        restaurants: this.state.restaurants.concat(newRestaurants)\n      });\n    };\n\n    this.handleSort = async (sortBy, order) => {\n      this.setState({\n        sortBy,\n        order\n      });\n      const restaurants = await getRestaurants(this.state.position, this.state.cuisine, this.state.offset, sortBy, order);\n      this.setState({\n        restaurants\n      });\n    };\n\n    this.handleClick = (isFavourite, restaurant) => {\n      let favourites;\n\n      if (isFavourite) {\n        favourites = this.state.favourites.filter(favourite => favourite.id !== restaurant.id);\n      } else {\n        favourites = this.state.favourites.concat(restaurant);\n      }\n\n      this.setState({\n        favourites\n      });\n      localStorage.setItem(\"favourites\", JSON.stringify(favourites));\n    };\n  }\n\n  componentDidMount() {\n    const favourites = JSON.parse(localStorage.getItem(\"favourites\")) || [];\n    this.setState({\n      favourites\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `${PREFIX}_container`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"navbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Navbar, {\n      onChange: this.onChange,\n      value: this.state.cuisine,\n      search: this.search,\n      operation: this.state.operation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.handleSort(\"rating\", \"asc\"),\n      className: this.state.sort === \"ratings\" ? \"active btn btn-link\" : \"btn btn-link\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }, \"Ratings Asc\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.handleSort(\"rating\", \"desc\"),\n      className: this.state.sort === \"ratings\" ? \"active btn btn-link\" : \"btn btn-link\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, \"Ratings Desc\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.handleSort(\"cost\", \"asc\"),\n      className: this.state.sort === \"ratings\" ? \"active btn btn-link\" : \"btn btn-link\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }\n    }, \"Average cost for two Asc\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.handleSort(\"cost\", \"desc\"),\n      className: this.state.sort === \"ratings\" ? \"active btn btn-link\" : \"btn btn-link\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    }, \"Average cost for two Desc\")), /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }\n    }, this.state.isLoading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 36\n      }\n    }, \"Loading... \"), this.state.restaurants.map(({\n      restaurant\n    }, index) => {\n      //restaurant.restaurant = { restaurant } destrukturalizace\n      const isFavourite = this.state.favourites.map(({\n        id\n      }) => id).indexOf(restaurant.id) !== -1;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        \"data-id\": restaurant,\n        onClick: () => this.handleClick(isFavourite, restaurant),\n        className: \"like\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }\n      }, isFavourite ? \"Remove\" : \"Add\"), /*#__PURE__*/React.createElement(RestaurantCard, {\n        restaurant: restaurant,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleShowMore.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }\n    }, \"Show more\")));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/elinasmirnova/Desktop/new_react_app/my-app/src/pages/Search/Search.js"],"names":["React","Component","Navbar","getRestaurants","RestaurantCard","PREFIX","Search","state","cuisine","operation","offset","position","undefined","restaurants","sortBy","order","favourites","isLoading","onChange","event","setState","target","value","search","navigator","geolocation","getCurrentPosition","data","handleShowMore","console","log","newRestaurants","concat","handleSort","handleClick","isFavourite","restaurant","filter","favourite","id","localStorage","setItem","JSON","stringify","componentDidMount","parse","getItem","render","sort","map","index","indexOf","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Navbar from \"../../components/NavbarSearch/Navbar\";\nimport { getRestaurants } from \"../../api/zomato\";\nimport \"./index.css\";\nimport RestaurantCard from \"../../components/RestaurantCard/RestaurantCard\";\n\nconst PREFIX = \"search\";\n\nclass Search extends Component {\n  state = {\n    cuisine: \"\",\n    operation: \"Search\",\n    offset: 0,\n    position: undefined,\n    restaurants: [],\n    sortBy: \"rating\",\n    order: \"desc\",\n    favourites: [],\n    isLoading: false,\n  };\n\n  componentDidMount() {\n    const favourites = JSON.parse(localStorage.getItem(\"favourites\")) || [];\n    this.setState({ favourites });\n  }\n\n  onChange = (event) => {\n    this.setState({\n      cuisine: event.target.value,\n    });\n  };\n\n  search = (event) => {\n    this.setState({\n      operation: \"Fetching location..\",\n      isLoading: true,\n    });\n\n    navigator.geolocation.getCurrentPosition(async (position) => {\n      this.setState({\n        operation: \"Fetching restaurants...\",\n        position: position,\n      });\n\n      const data = await getRestaurants(\n        position,\n        this.state.cuisine,\n        this.state.offset\n      );\n\n      this.setState({\n        restaurants: data,\n        operation: \"Search\",\n        isLoading: false,\n      });\n    });\n  };\n\n  handleShowMore = async () => {\n    this.setState({\n      offset: (this.state.offset += 10),\n    });\n\n    console.log(this.state.offset);\n\n    const newRestaurants = await getRestaurants(\n      this.state.position,\n      this.state.cuisine,\n      this.state.offset,\n      this.state.sortBy,\n      this.state.order\n    );\n    this.setState({\n      restaurants: this.state.restaurants.concat(newRestaurants),\n    });\n  };\n\n  handleSort = async (sortBy, order) => {\n    this.setState({\n      sortBy,\n      order,\n    });\n    const restaurants = await getRestaurants(\n      this.state.position,\n      this.state.cuisine,\n      this.state.offset,\n      sortBy,\n      order\n    );\n    this.setState({ restaurants });\n  };\n\n  // sortByRatingsDesc = () => {\n  //   let results = this.state.restaurants;\n  //   results = this.state.restaurants.sort((a, b) => {\n  //     return (\n  //       b.restaurant.user_rating[\"aggregate_rating\"] -\n  //       a.restaurant.user_rating[\"aggregate_rating\"]\n  //     );\n  //   });\n  //   this.setState({\n  //     sort: \"ratingsDesc\",\n  //     restaurants: results,\n  //   });\n  // };\n\n  // sortByRatingsAsc = () => {\n  //   let results = this.state.restaurants;\n  //   results = this.state.restaurants.sort((a, b) => {\n  //     return (\n  //       a.restaurant.user_rating[\"aggregate_rating\"] -\n  //       b.restaurant.user_rating[\"aggregate_rating\"]\n  //     );\n  //   });\n  //   this.setState({\n  //     sort: \"ratingsAsc\",\n  //     restaurants: results,\n  //   });\n  // };\n\n  // sortByAverageCostAsc = () => {\n  //   let results = this.state.restaurants;\n  //   results = this.state.restaurants.sort((a, b) => {\n  //     return (\n  //       a.restaurant.average_cost_for_two - b.restaurant.average_cost_for_two\n  //     );\n  //   });\n  //   this.setState({\n  //     sort: \"averageCostAsc\",\n  //     restaurants: results,\n  //   });\n  // };\n\n  // sortByAverageCostDesc = () => {\n  //   let results = this.state.restaurants;\n  //   results = this.state.restaurants.sort((a, b) => {\n  //     return (\n  //       b.restaurant.average_cost_for_two - a.restaurant.average_cost_for_two\n  //     );\n  //   });\n  //   this.setState({\n  //     sort: \"averageCostDesc\",\n  //     restaurants: results,\n  //   });\n  // };\n\n  handleClick = (isFavourite, restaurant) => {\n    let favourites;\n    if (isFavourite) {\n      favourites = this.state.favourites.filter(\n        (favourite) => favourite.id !== restaurant.id\n      );\n    } else {\n      favourites = this.state.favourites.concat(restaurant);\n    }\n    this.setState({ favourites });\n    localStorage.setItem(\"favourites\", JSON.stringify(favourites));\n  };\n\n  render() {\n    return (\n      <div className={`${PREFIX}_container`}>\n        <div className=\"navbar\">\n          {\" \"}\n          <Navbar\n            onChange={this.onChange}\n            value={this.state.cuisine}\n            search={this.search}\n            operation={this.state.operation}\n          ></Navbar>{\" \"}\n        </div>\n        <div className=\"sidebar\">\n          <button\n            onClick={() => this.handleSort(\"rating\", \"asc\")}\n            className={\n              this.state.sort === \"ratings\"\n                ? \"active btn btn-link\"\n                : \"btn btn-link\"\n            }\n            type=\"button\"\n          >\n            Ratings Asc\n          </button>\n          <button\n            onClick={() => this.handleSort(\"rating\", \"desc\")}\n            className={\n              this.state.sort === \"ratings\"\n                ? \"active btn btn-link\"\n                : \"btn btn-link\"\n            }\n            type=\"button\"\n          >\n            Ratings Desc\n          </button>\n          <button\n            onClick={() => this.handleSort(\"cost\", \"asc\")}\n            className={\n              this.state.sort === \"ratings\"\n                ? \"active btn btn-link\"\n                : \"btn btn-link\"\n            }\n            type=\"button\"\n          >\n            Average cost for two Asc\n          </button>\n          <button\n            onClick={() => this.handleSort(\"cost\", \"desc\")}\n            className={\n              this.state.sort === \"ratings\"\n                ? \"active btn btn-link\"\n                : \"btn btn-link\"\n            }\n            type=\"button\"\n          >\n            Average cost for two Desc\n          </button>\n        </div>\n        <main>\n          {this.state.isLoading && <div>Loading... </div>}\n          {this.state.restaurants.map(({ restaurant }, index) => {\n            //restaurant.restaurant = { restaurant } destrukturalizace\n            const isFavourite =\n              this.state.favourites\n                .map(({ id }) => id)\n                .indexOf(restaurant.id) !== -1;\n\n            return (\n              <div key={index}>\n                <button\n                  data-id={restaurant}\n                  onClick={() => this.handleClick(isFavourite, restaurant)}\n                  className=\"like\"\n                >\n                  {isFavourite ? \"Remove\" : \"Add\"}\n                </button>\n                <RestaurantCard restaurant={restaurant} />\n              </div>\n            );\n          })}\n          <button onClick={this.handleShowMore.bind(this)}>Show more</button>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}